name: Set the End Date in the project

on:
  issues:
    types: [closed, reopened]
jobs:
  track_issue:
    runs-on: ubuntu-22.04
    steps:
      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ secrets.PRACTICE_TOKEN }} 
          ORGANIZATION: forpractice-org
          PROJECT_NUMBER: 1
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectV2(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -F number=$PROJECT_NUMBER > project_data.json
          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'DATE_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "End Date") | .id' project_data.json) >> $GITHUB_ENV
      
      - name: Get date
        run: echo "DATE=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
        
      - name: Add item id
        env:
          GITHUB_TOKEN: ${{ secrets.PRACTICE_TOKEN }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($project:ID!, $issue:ID!) {
              addProjectV2ItemById(input: {projectId: $project, contentId: $issue}) {
                item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f issue=$ISSUE_ID --jq '.data.addProjectV2ItemById.item.id')"

          echo 'ITEM_ID='$item_id >> $GITHUB_ENV

          
      - name: Echo variable value
        run: echo 'Value of project id:' $PROJECT_ID
             echo 'Value of date field id:' $DATE_FIELD_ID
             echo 'Value of item id:' $ITEM_ID
             echo 'Value of date:' $DATE
             
      
      - name: Check if issue is closed
        if: github.event.action == 'closed'
        env:
          GITHUB_TOKEN: ${{ secrets.PRACTICE_TOKEN }} 
        run: |
          gh api graphql -f query='
            mutation (
              $project: ID!
              $item: ID!
              $date_field: ID!
              $date_value: Date!
            ) {
              set_end_date: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $date_field
                value: { 
                  date: $date_value
                }
              }) {
                projectV2Item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f item=$ITEM_ID -f date_field=$DATE_FIELD_ID -f date_value=$DATE --silent
            
      - name: Check if issue is reopened
        if: github.event.action == 'reopened'
        env:
          GITHUB_TOKEN: ${{ secrets.PRACTICE_TOKEN }} 
        run: |
          gh api graphql -f query='
            mutation (
              $project: ID!
              $item: ID!
              $date_field: ID!
            ) {
              set_end_date: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $date_field
                value: { 
                  date: null
                }
              }) {
                projectV2Item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f item=$ITEM_ID -f date_field=$DATE_FIELD_ID --silent   